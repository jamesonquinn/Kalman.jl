filtertest4.csv: using exp(-lp) INCONSISTENTLY in probSum, nIter = [1, 5, 20, 400]. No obvious trend in divergence over nIter; if anything, getting better.

filtertest5.csv: using exp(lp). Worse than filtertest4.

filtertest6.csv: using exp(-lp) consistently. Seems that it's right — the trace part of the divergence has a clear downward trend, yay. But — the diff-in-means part of the divergence has an upward trend. I think it's because I have not corrected for the forward density? I will try fixing that.


filtertest9.csv: bigger numbers of particles.

10: even more particles, but just for finkel.

11: like 10, ... forgot to make fps global. oh well.

12: global fps...
julia> print([cor(wmean,bkf.params(finalDist)[1]),
       cor(vec(mean(fps[end].tip.particles,2)),bkf.params(finalDist)[1]),
       cor(wmean,vec(mean(fps[end].tip.particles,2))),
       cor(wmean,observations[end].y),
       cor(observations[end].y,bkf.params(finalDist)[1])
       ])
[0.85266, 0.863401, 0.999003, 0.91942, 0.791686]

13: removing forwardProb correction. Better!

14: mega sim — but no timing. BROKEN! measures divegence from final step, not from current step.

15: mega sim 2. 2 histPerLoc.

16: vary histPerLoc. uniform history sampling

17: as above, with MhSampLog(7.5,20.0)

NOOOOO! 15-17 were as broken as 14. Fixed.

18: like 17 but works???

19: now with timing. But finkel fails — try/catch issue?

20: several abortive runs trying to fix try/catch.

21: fixed??

22: compromise?

23: more compromise, with lower histPerLoc (to make up for more locs)

24: mhcompromise with sampleuniform

25: mhsampled, SampleUniform; with higher particles for non-finkel

26: as above, measuring squared error

27: as above, varying mh and sample

28: redo 27 with some changing numbers (lower nIters/different particles)

29: sqerr for above is broken. fix?

30: reweight! had r and h switched. Fixed now? Nope....

31: fixed params inheritance and forwardDistribution centering. Ran halfway, got impatient.

32: other half of 31, with fewer runs.

33: fixed tempering of model, so sqerr doesn't diverge. temper=0.5

34: Quick rerun out to 20 steps to see if temper=0.5 is stable

35: rerun with temper=0.5 (I think? see if it agrees with 34)

36: with temper=0.85 (??)

37: was in same file as 36, split off

38: as above, focusing on 800 particles (and tiny nonfinkels) with 20/70 nIters. 10 reps. 3,9 hpl

39: mhType/sampType loops in proper place inside; 400 particles 15 steps 4 reps 5,70 iters; 3,6 hpl. Note, part is running too fast compared to franken/finkel; should rebalance, not that it matters.

40: more of above, with more particles for vanilla particle filter, and more frequent file writes so I can stop "whenever".
(is there low-hanging fruit for optimizing franken?)

41: more of the same

42: width changed, from 25 to 50

43: ??

44: useForward=true, width 50 ... but failed to build params

45: junk

46: partial run width 25 useForward

47: A couple of runs like 46

(48-52 I lost a save of this file, so reconstructed post-hoc)

48: Aborted, ignore; no finkels

49: dim 100, quickie/short

50: Again, no finkels.

51: dim 60, good! But pf particles just *2, not ^2.

52: dim 60, as with 51

53: dim 48, only log/compromise/6 for finkel

54: quickie, testing for good numbers for pf and franken — used ^2 and ^2/5 — aborted

55: 5x higher numbers for pf and franken...? d=48 or 60 (alternating). finkel still very roughly twice as slow but meh good enough.... aksh, nah, gonna make part/franken slower so finkel has no unfair adv. Aborted.

56: 10* higher for pf and franken. as 55.

57: finishing 56, but lighter on memory (don't keep old steps).

58: back to 5x higher for the 300 and 800 runs. Still too slow, going to go back to base as soon as one run finishes?

59:

60:

61:

62: Good run, 48/60 dimensions

63: more of same? Or like 64

64: testing useForward t/f

65: testing useForward 0/-1/.5




graphone: (started after 47)

1: initial testing, two runs concatted but misformatted. 800 finkel.

2: down to 80 finkel.

3: first graphable

4: various trials

5: 80 finkel, just one params --- but divergent

6: non divergent

7: 100 dimensions


newtest:

1, 2, 3, 4, 5: just run it

6: window=12

7: as 6, with 500 finkel particles and d=36

8: as 7 but: d=36, M=200, histPerLoc=30


fixed: new model, double-correction bug fixed

fixedest: newer model. similar to below, without last 2 nIters.

fixedest2:
histPerLocs = [15,30,9]
nIters = [40,0,80,20,160]
useForwards = [1.,.5,0.]
              (30,400,40^2      ,div(40^2,5),3,5  ,10,1,1,1),
              (30,400,400^2    ,div(400^2,5),1,2,10,1,2  ,1),
              (30,400,400^2    ,div(400^2,5),1,2,10,3  ,1,1),
            (60  ,400,400^2    ,div(400^2,5),1,2,10,1,1,1),
               (30,400,400^2   ,div(400^2,5),1,2,10,1,1,3  ),
            (30,200,200^2      ,div(200^2,5),1,2,10,1,1,1),
            (30,200,40^2        ,div(40^2,5),5,3,10,3,2,3)

3: ??

4: fixed franken kl

5: "fixed" franken kl (2 versions), franken sqerr. aborted in order to clean up false start headers.

6: skipped, number of the beast

7: like 5 but without false starts.
